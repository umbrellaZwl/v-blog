(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{361:function(e,t,a){"use strict";a.r(t);var r=a(42),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"fetch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fetch"}},[e._v("#")]),e._v(" fetch")]),e._v(" "),a("p",[e._v("Fetch API 提供了一个 JavaScript 接口，用于访问和操纵 HTTP 管道的一些具体部分，例如请求和响应。它还提供了一个全局 fetch() 方法，该方法提供了一种简单，合理的方式来跨网络异步获取资源。")]),e._v(" "),a("h3",{attrs:{id:"与ajax的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与ajax的区别"}},[e._v("#")]),e._v(" 与ajax的区别")]),e._v(" "),a("ul",[a("li",[e._v("当接收到一个代表错误的 HTTP 状态码时，从 fetch() 返回的 Promise 不会被标记为 reject， 即使响应的 HTTP 状态码是 404 或 500。相反，它会将 Promise 状态标记为 resolve （但是会将 resolve 的返回值的 ok 属性设置为 false ），仅当网络故障时或请求被阻止时，才会标记为 reject。")]),e._v(" "),a("li",[e._v("fetch发送请求默认是不会携带cookie的。需要配置credentials选项为include")]),e._v(" "),a("li",[e._v("fetch返回的是一个promise。不支持abort")]),e._v(" "),a("li",[e._v("fetch不可以原生监测请求的进度")])])])}),[],!1,null,null,null);t.default=s.exports}}]);