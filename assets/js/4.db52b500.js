(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{349:function(t,s,a){t.exports=a.p+"assets/img/490EBC7E-7500-4573-A1B1-C0153FD651A0.055ac055.png"},350:function(t,s,a){t.exports=a.p+"assets/img/CD17EF05-DE93-4F44-8AB3-ECECE889A465.933cd784.png"},359:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"vscode搭配linter-prettier"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vscode搭配linter-prettier"}},[t._v("#")]),t._v(" vscode搭配linter&prettier")]),t._v(" "),n("p",[t._v("Linter能对你的代码进行质量检查，格式化的功能比较有限。例如代码里有多余空格并不是lint error，因此也不会进行"),n("code",[t._v("eslint —fix")]),t._v("来修复。而"),n("a",{attrs:{href:"https://prettier.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("prettier"),n("OutboundLink")],1),t._v("意为更美丽，是一个代码格式化工具，能很好地弥补"),n("code",[t._v("linter")]),t._v("对"),n("code",[t._v("code formmat")]),t._v("的不足。结合linter和prettier，检测代码中的潜在问题，统一代码规范，助力写出高质量代码，提高工作效率。")]),t._v(" "),n("h3",{attrs:{id:"prettier-integrating-with-eslint"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#prettier-integrating-with-eslint"}},[t._v("#")]),t._v(" prettier integrating with eslint")]),t._v(" "),n("p",[t._v("假如你的项目没有使用eslint来对代码做质量检查，那按照如下几步也可以轻松在项目添加eslint")]),t._v(" "),n("ul",[n("li",[t._v("安装eslint")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i eslint -D\neslint --init\n")])])]),n("p",[t._v("安装完eslint之后，会在项目根目录下生成一个.eslintrc文件用于配置eslint的规则。")]),t._v(" "),n("ul",[n("li",[t._v("使用eslint\n在package.json里面配置")])]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"script"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lint"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint src/**/* --fix"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("执行"),n("code",[t._v("npm run lint")]),t._v("即可检查代码质量，并进行修复。")]),t._v(" "),n("ul",[n("li",[t._v("vscode实时格式化\n虽然上述命令能够对代码进行格式化，但是作为开发人员还是希望能够直接在编辑器里面实时看到错误标注并在保存的时候进行修复。")])]),t._v(" "),n("p",[t._v("首先在"),n("code",[t._v("vscode")]),t._v("中装一个插件"),n("code",[t._v("eslint")]),t._v("\n安装好之后打开一个js文件，便可以看到该文件代码里面有问题的地方已经可以看到红色的错误标注。但是发现vue文件仍然没有显示错误。\n不要紧，在项目根目录新建文件"),n("code",[t._v(".vscode/setting.json")]),t._v("并添加如下配置：")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"eslint.autoFixOnSave"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"eslint.validate"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n   \t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"javascript"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// jsx")]),t._v("\n    \t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"javascriptreact"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vue")]),t._v("\n    \t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      \t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"language"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vue"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      \t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"autoFix"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    \t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ts")]),t._v("\n    \t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      \t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"language"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"typescript"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      \t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"autoFix"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    \t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// tsx")]),t._v("\n    \t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      \t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"language"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"typescriptreact"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      \t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"autoFix"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    \t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    \t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"html"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("再次回去查看刚刚的vue文件，发现已经有红色标注了。保存一下，代码自动进行修复。")]),t._v(" "),n("ul",[n("li",[t._v("集成prettier\n经过以上几个步骤，代码质量已经比较可靠了。但是文件里面多余的空格，函数入参后的空格等格式却没有被当做lint error。如下图")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(349),alt:""}}),t._v("\n此时prettier的特长就可以派上用场了。")]),t._v(" "),n("p",[t._v("首先安装"),n("code",[t._v("eslint-plugin-prettier eslint-config-prettier")]),t._v(" "),n("code",[t._v("Eslint-plugin-prettier")]),t._v("用于集成prettier，而"),n("code",[t._v("eslint-config-prettier")]),t._v("需要放到extends配置项数组最后一项，用来关闭eslint中和prettier冲突的rule")]),t._v(" "),n("p",[t._v("在eslintrc中添加如下配置")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugins"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extends"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugin:vue/essential"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint:recommended"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint-config-prettier"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"prettier/prettier"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("此时再看刚刚的代码，如图：\n"),n("img",{attrs:{src:a(350),alt:""}})]),t._v(" "),n("p",[t._v("刚刚的空格等格式问题就已经有了错误标注，保存一下自动修复。")]),t._v(" "),n("p",[t._v("至此，代码质量和格式都已经比较规范统一了。但是prettier对vue单文件中的template支持不太好。此时开启vscode的格式化功能。可以装一些其他格式化插件来增强vscode的格式化能力，例如vetur。在"),n("code",[t._v(".vscode/setting.json")]),t._v("中设置"),n("code",[t._v("”editor.formatOnSave”: true")]),t._v("及时格式化。")]),t._v(" "),n("h3",{attrs:{id:"prettier-integrating-with-tslint"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#prettier-integrating-with-tslint"}},[t._v("#")]),t._v(" prettier integrating with tslint")]),t._v(" "),n("p",[t._v("其他lint的集成步骤跟eslint同理。")]),t._v(" "),n("ul",[n("li",[t._v("安装配置tslint")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i tslint -D\ntslint --init\n")])])]),n("ul",[n("li",[t._v("使用tslint进行修复\n在package.json中进行如下配置：")])]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lint"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tslint src/**/*.ts --fix"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("在vscode中使用tslint")])]),t._v(" "),n("p",[t._v("此时需要安装两个个vscode插件"),n("code",[t._v("TSLint TSLint Vue")]),t._v("\n安装好之后，便可以在vscode中看到代码里的错误标注")]),t._v(" "),n("p",[t._v("在"),n("code",[t._v(".vscode/setting.json")]),t._v("中添加如下配置：")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tslint.autoFixOnSave"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),n("p",[t._v("保存时对代码进行修复。")]),t._v(" "),n("ul",[n("li",[t._v("集成prettier\n与Eslint同理，集成prettier来对"),n("code",[t._v("code format")]),t._v("进行加强。")])]),t._v(" "),n("p",[t._v("首先安装"),n("code",[t._v("tslint-plugin-prettier")]),t._v("和"),n("code",[t._v("tslint-config-prettier")])]),t._v(" "),n("p",[t._v("在tslint.json中添加如下配置")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extends"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tslint-plugin-prettier"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tslint-config-prettier"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"prettier"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("完成以上步骤后，保存时即可对ts代码质量和格式进行较好的统一。")]),t._v(" "),n("h3",{attrs:{id:"参考链接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://prettier.io/docs/en/eslint.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Integrating with Linters · Prettier"),n("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);